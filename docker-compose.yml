services:
  web:
    container_name: web
    build:
      context: ..
      dockerfile: ../Dockerfile
    restart: unless-stopped
    volumes:
      - web_todo:/app/
    ports:
      - 8000:8000
    networks:
      - rabbitmq
      - postgres
      - redis


  tg-bot-worker:
    container_name: tg-bot-worker
    build:
      context: tg_bot
    restart: unless-stopped
    networks:
      - rabbitmq
    env_file:
      - tg_bot/.env.tgbot

  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_BD}
    networks:
      - postgres
    ports:
      - 5432:5432

  redis:
    container_name: redis
    image: redis:alpine
    ports:
      - 6379:6379
    volumes:
      - redis_todo:/data
    networks:
      - redis
    command: redis-server --requirepass "${REDIS_PASSWORD}"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 15672:15672
    networks:
      - rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin1





networks:
  redis:
  postgres:
  rabbitmq:



volumes:
  web_todo:
    name: web_todo
  redis_todo:
    name: redis_todo

