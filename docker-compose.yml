services:
  web:
    container_name: web
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - web_todo:/app/
    ports:
      - 8000:8000
    networks:
      - rabbitmq
      - postgres
      - redis
    env_file:
      - .env
    depends_on:
      - redis
      - rabbitmq
      - postgres
      - tg-bot-worker


  db-worker:
    container_name: db-worker
    build: .
    restart: unless-stopped
    networks:
      - rabbitmq
    env_file:
      - tg_bot/.env.tgbot
    depends_on:
      - rabbitmq

  tg-bot-worker:
    container_name: tg-bot-worker
    build:
      context: tg_bot
    restart: unless-stopped
    networks:
      - rabbitmq
    env_file:
      - tg_bot/.env.tgbot
    depends_on:
      - rabbitmq

  postgres:
    container_name: postgres
    image: postgres:15
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - postgres

  redis:
    container_name: redis
    image: redis:alpine

    volumes:
      - redis_todo:/data
    networks:
      - redis
    command: redis-server --requirepass "${REDIS_PASSWORD}"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 15673:15672
    networks:
      - rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}





networks:
  redis:
    driver: bridge
  postgres:
    driver: bridge
  rabbitmq:
    driver: bridge



volumes:
  web_todo:
    name: web_todo
  redis_todo:
    name: redis_todo

